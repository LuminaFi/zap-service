openapi: 3.0.0
info:
  title: ZAP Cross-Chain Transfer Service API
  description: API for facilitating cross-chain token transfers between Ethereum/Solana and the Lisk network
  version: 1.0.0
  contact:
    name: ZAP Development Team
    email: support@zap-service.example
servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://api.zap-service.example
    description: Production server

tags:
  - name: Meta-Transaction
    description: Meta-transaction operations for transferring IDRX tokens
  - name: Token Fee
    description: Operations for calculating fees and token prices
  - name: Reserve Limit
    description: Operations for managing transfer limits based on reserve size
  - name: Transaction History
    description: Operations for retrieving transaction history
  - name: IDRX Balance
    description: Operations for checking IDRX token balances

paths:
  /api/meta-transfer:
    post:
      tags:
        - Meta-Transaction
      summary: Execute a meta-transaction to transfer IDRX tokens
      description: Transfer IDRX tokens to a recipient without them needing to pay gas fees
      operationId: executeTransfer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recipient
                - idrxAmount
              properties:
                recipient:
                  type: string
                  description: Ethereum-compatible address of the recipient
                  example: "0x1234567890abcdef1234567890abcdef12345678"
                idrxAmount:
                  type: string
                  description: Amount of IDRX tokens to transfer
                  example: "1000.0"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  transferId:
                    type: string
                    example: "0x8d7f6a56c76d6a6d7a6d8c7d8a7d6a8d7f6a5d6a7d6a8d7f6a5d6a7d6a8d7f"
                  recipient:
                    type: string
                    example: "0x1234567890abcdef1234567890abcdef12345678"
                  amount:
                    type: string
                    example: "1000.0"
                  transactionHash:
                    type: string
                    example: "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/status:
    get:
      tags:
        - Meta-Transaction
      summary: Get service status
      description: Retrieve current status of the transfer service
      operationId: getServiceStatus
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  isActive:
                    type: boolean
                    example: true
                  reserve:
                    type: string
                    example: "1000000.0"
                  minTransferAmount:
                    type: string
                    example: "10.0"
                  maxTransferAmount:
                    type: string
                    example: "100000.0"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/health:
    get:
      tags:
        - Meta-Transaction
      summary: Service health check
      description: Simple health check endpoint
      operationId: healthCheck
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"

  /api/token-price/{token}:
    get:
      tags:
        - Token Fee
      summary: Get token price data
      description: Retrieve current price data for a token in USD and IDR
      operationId: getTokenPrice
      parameters:
        - name: token
          in: path
          description: Token name or symbol (optional, defaults to 'ethereum')
          required: false
          schema:
            type: string
            default: ethereum
            example: solana
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                    example: "solana"
                  tokenSymbol:
                    type: string
                    example: "SOL"
                  priceUsd:
                    type: number
                    format: double
                    example: 142.57
                  priceIdr:
                    type: number
                    format: double
                    example: 2209835
                  timestamp:
                    type: integer
                    format: int64
                    example: 1681234567890
                  priceIdrFormatted:
                    type: string
                    example: "Rp 2.209.835"
                  priceUsdFormatted:
                    type: string
                    example: "$142.57"
        "404":
          description: Token not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/calculate-fees:
    get:
      tags:
        - Token Fee
      summary: Calculate admin fee and spread fee
      description: Calculate admin fee and spread fee for a token amount
      operationId: calculateFees
      parameters:
        - name: token
          in: query
          description: Token name or symbol (optional, defaults to 'ethereum')
          required: false
          schema:
            type: string
            default: ethereum
            example: ethereum
        - name: amount
          in: query
          description: Amount of the token
          required: true
          schema:
            type: number
            format: double
            example: 1.5
        - name: customSpreadFee
          in: query
          description: Optional custom spread fee percentage (as decimal, e.g. 0.01 = 1%)
          required: false
          schema:
            type: number
            format: double
            example: 0.01
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    $ref: "#/components/schemas/FeeCalculationResult"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/calculate-idrx:
    get:
      tags:
        - Token Fee
      summary: Calculate IDRX amount from source token
      description: Calculate IDRX amount based on source token amount
      operationId: calculateIdrxAmount
      parameters:
        - name: token
          in: query
          description: Source token name or symbol (optional, defaults to 'ethereum')
          required: false
          schema:
            type: string
            default: ethereum
            example: ethereum
        - name: amount
          in: query
          description: Amount of source token
          required: true
          schema:
            type: number
            format: double
            example: 0.5
        - name: customSpreadFee
          in: query
          description: Optional custom spread fee percentage
          required: false
          schema:
            type: number
            format: double
            example: 0.01
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                    example: "ethereum"
                  sourceAmount:
                    type: number
                    format: double
                    example: 0.5
                  idrxAmount:
                    type: number
                    format: double
                    example: 21829815.225
                  idrxAmountFormatted:
                    type: string
                    example: "Rp 21.829.815"
                  fees:
                    $ref: "#/components/schemas/FeeCalculationResult"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/calculate-source:
    get:
      tags:
        - Token Fee
      summary: Calculate source token amount for IDRX
      description: Calculate source token amount needed for a desired IDRX amount
      operationId: calculateSourceAmount
      parameters:
        - name: token
          in: query
          description: Source token name or symbol (optional, defaults to 'ethereum')
          required: false
          schema:
            type: string
            default: ethereum
            example: ethereum
        - name: idrxAmount
          in: query
          description: Desired IDRX amount
          required: true
          schema:
            type: number
            format: double
            example: 10000000
        - name: customSpreadFee
          in: query
          description: Optional custom spread fee percentage
          required: false
          schema:
            type: number
            format: double
            example: 0.01
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                    example: "ethereum"
                  sourceAmount:
                    type: number
                    format: double
                    example: 0.2285
                  sourceAmountFormatted:
                    type: string
                    example: "0.22850000 ETH"
                  idrxAmount:
                    type: number
                    format: double
                    example: 10000000
                  idrxAmountFormatted:
                    type: string
                    example: "Rp 10.000.000"
                  fees:
                    $ref: "#/components/schemas/FeeCalculationResult"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/volatility/{token}:
    get:
      tags:
        - Token Fee
      summary: Calculate volatility and recommended spread fee
      description: Calculate volatility and recommended spread fee for a token
      operationId: calculateVolatility
      parameters:
        - name: token
          in: path
          description: Token name or symbol (optional, defaults to 'ethereum')
          required: false
          schema:
            type: string
            default: ethereum
            example: solana
        - name: days
          in: query
          description: Number of days for volatility calculation (1-30, optional, defaults to 1)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 30
            default: 1
            example: 7
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                    example: "solana"
                  volatility:
                    type: number
                    format: double
                    example: 0.02456
                  recommendedSpreadFee:
                    type: number
                    format: double
                    example: 0.01428
                  timeframe:
                    type: string
                    example: "7 days"
                  timestamp:
                    type: integer
                    format: int64
                    example: 1681234567890
                  volatilityPercentage:
                    type: string
                    example: "2.46%"
                  recommendedSpreadFeePercentage:
                    type: string
                    example: "1.43%"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Token not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/supported-tokens:
    get:
      tags:
        - Token Fee
      summary: Get list of supported tokens
      description: Retrieve a list of all supported tokens with their symbols
      operationId: getSupportedTokens
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  tokens:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "ethereum"
                        symbol:
                          type: string
                          example: "ETH"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/transfer-limits:
    get:
      tags:
        - Reserve Limit
      summary: Calculate transfer limits based on reserve
      description: Calculate recommended transfer limits based on current reserve pool size
      operationId: calculateTransferLimits
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  reserve:
                    type: string
                    example: "1000000.0"
                  minTransferAmount:
                    type: string
                    example: "10.0"
                  recommendedMinAmount:
                    type: string
                    example: "20.0"
                  maxTransferAmount:
                    type: string
                    example: "100000.0"
                  recommendedMaxAmount:
                    type: string
                    example: "20000.0"
                  reserveUtilizationPercentage:
                    type: string
                    example: "2.00%"
                  healthStatus:
                    type: string
                    enum: [EXCELLENT, GOOD, MODERATE, LOW, CRITICAL]
                    example: "GOOD"
                  recommendations:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Based on the current reserve of 1000000.0 IDRX, we recommend setting transfer limits between 20.0 and 20000.0 IDRX."
                      healthStatus:
                        type: string
                        enum: [EXCELLENT, GOOD, MODERATE, LOW, CRITICAL]
                        example: "GOOD"
                      healthDescription:
                        type: string
                        example: "The reserve is in good condition. It can support normal operations with moderate transfer limits."
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Reserve Limit
      summary: Update contract transfer limits
      description: Update minimum and maximum transfer limits in the contract (requires operator privileges)
      operationId: updateTransferLimits
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - minAmount
                - maxAmount
              properties:
                minAmount:
                  type: string
                  description: Minimum transfer amount in IDRX
                  example: "20.0"
                maxAmount:
                  type: string
                  description: Maximum transfer amount in IDRX
                  example: "20000.0"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Transfer limits updated successfully"
                  transactionHash:
                    type: string
                    example: "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
                  updatedLimits:
                    type: object
                    properties:
                      minAmount:
                        type: string
                        example: "20.0"
                      maxAmount:
                        type: string
                        example: "20000.0"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/transactions/{address}:
    get:
      tags:
        - Transaction History
      summary: Get transaction history for an address
      description: Retrieve transaction history for a specific address from the Blockscout API
      operationId: getTransactionHistory
      parameters:
        - name: address
          in: path
          description: Ethereum address to get transactions for
          required: true
          schema:
            type: string
            example: "0x1234567890abcdef1234567890abcdef12345678"
        - name: page
          in: query
          description: Page number for pagination (optional, defaults to 1)
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
            example: 1
        - name: limit
          in: query
          description: Number of transactions per page (optional, defaults to 20, max 100)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
            example: 10
        - name: filterBy
          in: query
          description: Filter transactions by direction (optional, defaults to 'all')
          required: false
          schema:
            type: string
            enum: [from, to, all]
            default: all
            example: from
        - name: sort
          in: query
          description: Sort transactions by timestamp (optional, defaults to 'desc')
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
            example: desc
        - name: startDate
          in: query
          description: Filter transactions after this date in ISO format (optional)
          required: false
          schema:
            type: string
            format: date-time
            example: "2023-01-01T00:00:00Z"
        - name: endDate
          in: query
          description: Filter transactions before this date in ISO format (optional)
          required: false
          schema:
            type: string
            format: date-time
            example: "2023-04-30T23:59:59Z"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionHistoryResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/transaction/{txHash}:
    get:
      tags:
        - Transaction History
      summary: Get transaction details by hash
      description: Retrieve detailed information about a specific transaction
      operationId: getTransactionByHash
      parameters:
        - name: txHash
          in: path
          description: Transaction hash to look up
          required: true
          schema:
            type: string
            example: "0x9876543210fedcba9876543210fedcba9876543210fedcba9876543210fedcba"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  transaction:
                    $ref: "#/components/schemas/ParsedTransaction"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/idrx-balance/{address}:
    get:
      tags:
        - IDRX Balance
      summary: Get IDRX token balance for an address
      description: Retrieve IDRX token balance for a specific address on the Lisk network
      operationId: getBalance
      parameters:
        - name: address
          in: path
          description: Ethereum-compatible address to check balance for
          required: true
          schema:
            type: string
            example: "0x1234567890abcdef1234567890abcdef12345678"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  address:
                    type: string
                    example: "0x1234567890abcdef1234567890abcdef12345678"
                  balance:
                    type: string
                    example: "1000000000000000000000"
                  formattedBalance:
                    type: string
                    example: "1000.0"
                  tokenSymbol:
                    type: string
                    example: "IDRX"
                  tokenAddress:
                    type: string
                    example: "0x0123456789abcdef0123456789abcdef01234568"
                  timestamp:
                    type: integer
                    format: int64
                    example: 1681234567890
                  idrBalanceFormatted:
                    type: string
                    example: "Rp 1.000"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/idrx-token-info:
    get:
      tags:
        - IDRX Balance
      summary: Get IDRX token information
      description: Retrieve information about the IDRX token including name, symbol, and decimals
      operationId: getTokenInfo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  name:
                    type: string
                    example: "Indonesian Rupiah Stablecoin"
                  symbol:
                    type: string
                    example: "IDRX"
                  address:
                    type: string
                    example: "0x0123456789abcdef0123456789abcdef01234568"
                  decimals:
                    type: integer
                    example: 18
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "Invalid recipient address"

    FeeCalculationResult:
      type: object
      properties:
        token:
          type: string
          example: "ethereum"
        tokenSymbol:
          type: string
          example: "ETH"
        priceUsd:
          type: number
          format: double
          example: 2835.42
        priceIdr:
          type: number
          format: double
          example: 43949010
        adminFeePercentage:
          type: number
          format: double
          example: 0.005
        adminFeeAmount:
          type: number
          format: double
          example: 0.0075
        spreadFeePercentage:
          type: number
          format: double
          example: 0.002
        spreadFeeAmount:
          type: number
          format: double
          example: 0.003
        totalFeePercentage:
          type: number
          format: double
          example: 0.007
        totalFeeAmount:
          type: number
          format: double
          example: 0.0105
        amountBeforeFees:
          type: number
          format: double
          example: 1.5
        amountAfterFees:
          type: number
          format: double
          example: 1.4895
        exchangeRate:
          type: number
          format: double
          example: 43949010
        timestamp:
          type: integer
          format: int64
          example: 1681234567890
        priceIdrFormatted:
          type: string
          example: "Rp 43.949.010"
        priceUsdFormatted:
          type: string
          example: "$2,835.42"
        adminFeePercentageFormatted:
          type: string
          example: "0.50%"
        spreadFeePercentageFormatted:
          type: string
          example: "0.20%"
        totalFeePercentageFormatted:
          type: string
          example: "0.70%"

    ParsedTransaction:
      type: object
      properties:
        hash:
          type: string
          example: "0x9876543210fedcba9876543210fedcba9876543210fedcba9876543210fedcba"
        from:
          type: string
          example: "0x1234567890abcdef1234567890abcdef12345678"
        to:
          type: string
          example: "0xabcdef1234567890abcdef1234567890abcdef12"
        value:
          type: string
          example: "1000000000000000000"
        valueInEther:
          type: string
          example: "1"
        timestamp:
          type: integer
          example: 1681234567
        formattedDate:
          type: string
          format: date-time
          example: "2023-04-11T12:34:56.000Z"
        status:
          type: string
          enum: [success, error, pending]
          example: "success"
        gasUsed:
          type: string
          example: "21000"
        gasPrice:
          type: string
          example: "5000000000"
        blockNumber:
          type: integer
          example: 12345678
        isContractInteraction:
          type: boolean
          example: false
        functionName:
          type: string
          nullable: true
          example: null
        methodId:
          type: string
          nullable: true
          example: null

    TransactionHistoryResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        address:
          type: string
          example: "0x1234567890abcdef1234567890abcdef12345678"
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/ParsedTransaction"
        pagination:
          type: object
          properties:
            page:
              type: integer
              example: 1
            limit:
              type: integer
              example: 10
            total:
              type: integer
              example: 45
            hasMore:
              type: boolean
              example: true
        summary:
          type: object
          properties:
            totalTransactions:
              type: integer
              example: 10
            sentTransactions:
              type: integer
              example: 6
            receivedTransactions:
              type: integer
              example: 4
            totalSent:
              type: string
              example: "2.5"
            totalReceived:
              type: string
              example: "1.2"
            lastTransaction:
              type: string
              format: date-time
              example: "2023-04-11T12:34:56.000Z"
